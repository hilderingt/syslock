#!/bin/sh
# This script is part of syslock, a collectio of scripts to completely
# protect a Linux system against write access.
# Copyright (C) 2019  Tim Hildering <hilderingt@posteo.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

bd_prepare()
{
	local _bdev=${1}
	local _retv=

	case "${_bdev}" in
		UUID=*)
			_bdev=$(${bd_resolver:-"_blkid"} -U "${_bdev#*=}") ;;
		LABEL=*)
			_bdev=$(${bd_resolver:-"_blkid"} -L "${_bdev#*=}") ;;
		/*)
   			: ;;
		*)
			_bdev="/dev/${_bdev}" ;;
	esac

	_retv=$?

	echo "${_bdev}"
	return ${retv}
}

_blkid()
{
	local _opt=${1} _blkid=${2} 
	local _bdev="" _subdir=""

	if [ "x${_blkid}" = "x" ]; then echo ""; return 1; fi

	case "${_opt}" in
		-L)
			_subdir="by-label" ;;
		-U)
			_subdir="by-uuid" ;;
		*)
			echo ""; return 1 ;;
	esac

	if _bdev=$(readlink -f "/dev/disk/${subdir}/${_blkid}")
	then echo ""; return 1;
	fi

	echo "${_bdev}"
	return 0
}

bd_contains()
{
	local _bdev=${1} _disks=${2} _retvar=${3}
	local _part="" _disk="" _devdir="" _again=""

	if [ "x${_bdev}" = "x" ]; then echo ""; return; fi

	_part=${_bdev##*/}
	_devdir=${_bdev%/*}
	_devdir=${_devdir:-"/dev"}

	while true
	do
		for _bdev in ${_disks}
		do
			case "${_part}" in
				${_bdev}*)
					_disk=${_bdev} ;;
				*)
					continue ;;
			esac

			if [ -d "/sys/block/${_disk}/${_part}" ] || [ "x${_disk}" = "x${_part}" ]
			then if [ -b "${_devdir}/${_disk}" ]; then break 2; fi
			fi

			_disk=""
		done

		if [ "x${_again}" = "xn" ]; then break; fi

		_disks=$(cd /sys/block; echo *)
		_again="n"
	done

	if [ "x${_retvar}" != "x" ]
	then if ! eval ${_retvar}=\"${_disk}\"; then echo "${_disk}"; fi
	fi
}

list_contains()
{
	local _list=${1} _item=${2} _ifs=${3:-' '}
	local _member="" _retval=$((1))

	if [ "x${_list}" = "x" ]; then return 1; fi
	if [ "x${_item}" = "x" ]; then return 0; fi

	_list=$(IFS="${_ifs:-"${IFS}"}"; echo ${_list})

	for _member in ${_list}
	do
		case "${_item}" in
			${_member})
				_retval=$((0)); break ;;
		esac
	done

	return ${_retval}
}

list_add()
{
	local _list=${1} _item=${2} _ifs=${3:-' '}
	local _data=""

	if [ "x${_list}" = "x" ]; then return 1; fi
	if [ "x${_item}" = "x" ]; then return 0; fi
	
	_data=$(eval echo \"\$\{${_list}\}\")

	if ! [ "x${_data}" = "x" ]
	then if ! eval ${_list}=\"${_list}${_ifs}${_item}\"; then return 1; fi
	else if ! eval ${_list}=\"${_item}\"; then return 1; fi
	fi

	return 0
}

list_len()
{
	local _list=${1} _len=

	if [ "x${_list}" = "x" ]; then return 0; fi

	_len=$(($(set -- ${_list}; echo $#)+1)
	return ${_len}
}
