#!/bin/sh

PREREQ=""

prereqs()
{
    echo "${PREREQ}"
}

case "$1" in
    prereqs)
    	prereqs
    	exit 0
    	;;
esac

#. /scripts/functions
. /usr/share/initramfs-tools/scripts/functions

PKGNAME="lockroot"
NOLOCK_FILE="/nolock"
rootmnt="/tmp/root"

NOLOCK=
for PARAM in $(cat /proc/cmdline); do
    case ${PARAM} in
        nolock)
            NOLOCK=true ;;
    esac
done

if [ "x${NOLOCK}" = "xtrue" ]; then
    log_warning_msg "${PKGNAME}: disabled, found kernel boot parameter 'nolock'"
    exit 0
fi

if [ -e "${rootmnt}${NOLOCK_FILE}" ]; then
    log_warning_msg "${PKGNAME}: disabled, found file '${rootmnt}${NOLOCK_FILE}'"
    exit 0
fi

ROOT_OVERLAY_MOUNT=/mnt/overlay
ROOT_OVERLAY_BASE=/.lock
ROOT_OVERLAY_WORK=${ROOT_OVERLAY_BASE}/.work
ROOT_OVERLAY_UPPER=${ROOT_OVERLAY_BASE}/rw
ROOT_OVERLAY_LOWER=${ROOT_OVERLAY_BASE}/ro

[ -d ${ROOT_OVERLAY_BASE} ] || mkdir -p ${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.1: failed to create '${ROOT_OVERLAY_BASE}'"
    exit 0
fi

mount -t tmpfs tmpfs-root ${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.2: failed to create tmpfs for root filesystem"
    exit 0
fi

[ -d ${ROOT_OVERLAY_UPPER} ] || mkdir -p ${ROOT_OVERLAY_UPPER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 2.1: failed to create '${ROOT_OVERLAY_UPPER}'"
    exit 0
fi

[ -d ${ROOT_OVERLAY_LOWER} ] || mkdir -p ${ROOT_OVERLAY_LOWER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 2.2: failed to create '${ROOT_OVERLAY_LOWER}'"
    exit 0
fi

[ -d ${ROOT_OVERLAY_WORK} ] || mkdir -p ${ROOT_OVERLAY_WORK}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 2.3: failed to create '${ROOT_OVERLAY_WORK}'"
    exit 0
fi

mount --move ${rootmnt} ${ROOT_OVERLAY_LOWER} || mount -o move ${rootmnt} ${ROOT_OVERLAY_LOWER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 3: failed to move root filesystem from '${rootmnt}' to '${ROOT_OVERLAY_LOWER}'"
    exit 0
fi

[ -d ${ROOT_OVERLAY_MOUNT} ] || mkdir -p ${ROOT_OVERLAY_MOUNT}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 4.1: failed to create '${ROOT_OVERLAY_MOUNT}'"
    exit 0
fi

mount -t overlay -o lowerdir=${ROOT_OVERLAY_LOWER},upperdir=${ROOT_OVERLAY_UPPER},workdir=${ROOT_OVERLAY_WORK} overlay-root ${ROOT_OVERLAY_MOUNT}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 4.2: failed to create overlay for root filesystem"
    exit 0
fi

[ -d ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE} ] || mkdir -p ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 5.1: failed to create '${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE}'"
    exit 0
fi

mount --move ${ROOT_OVERLAY_BASE} ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE} || mount -o move ${ROOT_OVERLAY_BASE} ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 5.2: failed to move '${ROOT_OVERLAY_BASE}' to '${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_BASE}'"
    exit 0
fi

OLD_FSTAB=${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_LOWER}/etc/fstab
NEW_FSTAB=${ROOT_OVERLAY_MOUNT}/etc/fstab

cat <<EOF >${NEW_FSTAB}
#
#  modified by lockroot at startup
#
EOF

grep -v '^[[:blank:]]*\(#\|$\)' ${OLD_FSTAB} |
while IFS= read -r line; do
    while read -r source target fstype mntopts dump pass; do
        if [ "x${target}" = "x/" -o "x${fstype}" = "xswap" ]; then
            echo "#${line}"
            continue
        fi

        if [ "x${fstype}" = "xnone" -o "x${fstype}" = "xignore" -o "x${fstype}" = "xtmpfs" ]; then
            echo "${line}"
            continue
        fi

        case "${source}" in
            UUID=*|LABEL=*|/*)
                echo "${source} ${target} lockdev devfs=${fstype},${mntopts} ${dump} ${pass}" ;;
            *)
                echo "${line}" ;;
        esac
    done <<-EOF
${line}
EOF
done >>${NEW_FSTAB}

mount --move ${ROOT_OVERLAY_MOUNT} ${rootmnt} || mount -o move ${ROOT_OVERLAY_MOUNT} ${rootmnt}
if [ $? -ne 0 ]; then
    mount --move ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_LOWER} ${rootmnt} || mount -o move ${ROOT_OVERLAY_MOUNT}${ROOT_OVERLAY_LOWER} ${rootmnt}
    if [ $? -ne 0 ]; then
       panic "${PKGNAME}: recovery error: failed to revover original root filesystem to ${rootmnt}"
    fi
fi

log_success_msg "${PKGNAME}: sucessfully set up overlay for root filesystem"

exit 0