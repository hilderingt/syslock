#!/bin/sh

PREREQ=""

prereqs()
{
    echo "${PREREQ}"
}

recover_rootmnt()
{
    mount -o move ${1} ${rootmnt}
    if [ $? -ne 0 ]; then
       panic "${PKGNAME}: recovery error: failed to revover original root filesystem to ${rootmnt}"
    fi
}

case "$1" in
    prereqs)
    prereqs
    exit 0
    ;;
esac

. /scripts/functions

PKGNAME="lockroot"
NOLOCK_FILE="/nolock"

NOLOCK=
for PARAM in $(cat /proc/cmdline); do
    case ${PARAM} in
        nolock)
            NOLOCK=true
            ;;
    esac
done

if [ "x${NOLOCK}" = "xtrue" ]; then
    log_warning_msg "${PKGNAME}: disabled, found kernel boot parameter 'nolock'"
    exit 0
fi

if [ -e "${rootmnt}${NOLOCK_FILE}" ]; then
    log_warning_msg "${PKGNAME}: disabled, found file '${rootmnt}${NOLOCK_FILE}'"
    exit 0
fi

ROOT_OVERLAY_TEMPMNT=/mnt/overlay
ROOT_OVERLAY_BASEDIR=/.lock
ROOT_OVERLAY_WORKDIR=${ROOT_OVERLAY_BASEDIR}/.work
ROOT_OVERLAY_UPPERDIR=${ROOT_OVERLAY_BASEDIR}/rw
ROOT_OVERLAY_LOWERDIR=${ROOT_OVERLAY_BASEDIR}/ro

[ -d ${ROOT_OVERLAY_TEMPMNT} ] || mkdir -p ${ROOT_OVERLAY_TEMPMNT}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1: failed to create '${ROOT_OVERLAY_TEMPMNT}'"

mount -t tmpfs tmpfs-root ${ROOT_OVERLAY_BASEDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.1: failed to create tmpfs for root filesystem"
    exit 0
fi

[ -d ${ROOT_OVERLAY_UPPERDIR} ] || mkdir -p ${ROOT_OVERLAY_UPPERDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.2: failed to create '${ROOT_OVERLAY_UPPERDIR}'"
    exit 0
fi

[ -d ${ROOT_OVERLAY_LOWERDIR} ] || mkdir -p ${ROOT_OVERLAY_LOWERDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.3: failed to create '${ROOT_OVERLAY_LOWERDIR}'"
    exit 0
fi

[ -d ${ROOT_OVERLAY_WORKDIR} ] || mkdir -p ${ROOT_OVERLAY_WORKDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 1.4: failed to create '${ROOT_OVERLAY_WORKDIR}'"
    exit 0
fi

mount -o move ${rootmnt} ${ROOT_OVERLAY_LOWERDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 2: failed to move root filesystem from '${rootmnt}' to '${ROOT_OVERLAY_LOWERDIR}'"
    exit 0
fi

mount -t overlay -o lowerdir=${ROOT_OVERLAY_LOWERDIR},upperdir=${ROOT_OVERLAY_UPPERDIR},workdir=${ROOT_OVERLAY_WORKDIR} overlay-root ${ROOT_OVERLAY_TEMPMNT}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 3: failed to create overlay for root filesystem"
    exit 0
fi

[ -d ${ROOT_OVERLAY_TEMPMNT}${ROOT_OVERLAY_BASEDIR} ] || mkdir -p ${ROOT_OVERLAY_TEMPMNT}${ROOT_OVERLAY_BASEDIR}
mount -o move ${ROOT_OVERLAY_BASEDIR} ${ROOT_OVERLAY_TEMPMNT}${ROOT_OVERLAY_BASEDIR}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: error 4: failed to move '${ROOT_OVERLAY_BASEDIR}' to '${ROOT_OVERLAY_TEMPMNT}${ROOT_OVERLAY_BASEDIR}'"
    exit 0
fi

OLD_FSTAB=${ROOT_OVERLAY_TMPMNT}${ROOT_OVERLAY_LOWER}/etc/fstab
NEW_FSTAB=${ROOT_OVERLAY_TMPMNT}/etc/fstab

cat <<EOF >${NEW_FSTAB}
#
#  modified by lockroot at startup
#
EOF

grep -v '^[[:blank:]]*\(#\|$\)' ${OLD_FSTAB} |
while IFS= read -r line; do
    while read -r source target fstype mntopts dump pass; do
        if [ "x${target}" = "x/" -o "x${fstype}" = "xswap" ]; then
            echo "#${line}"
            continue
        fi

        if [ "x${fstype}" = "xnone" \
                -o "x${fstype}" = "xignore" -o "x${fstype}" = "xtmpfs" ]; then
            echo "${line}"
            continue
        fi

        case "${source}" in
            UUID=*|LABEL=*|/*)
                echo "${source} ${target} lockdev devfs=${fstype},${mntopts} ${dump} ${pass}" ;;
            *)
                echo "${line}" ;;
        esac
    done <<-EOF
${line}
EOF
done >>${NEW_FSTAB}

mount -o move ${ROOT_OVERLAY_TEMPMNT} ${rootmnt}
if [ $? -ne 0 ]; then
    mount -o move ${ROOT_OVERLAY_TEMPMNT}${ROOT_OVERLAY_LOWERDIR} ${rootmnt}
    if [ $? -ne 0 ]; then
       panic "${PKGNAME}: recovery error: failed to revover original root filesystem to ${rootmnt}"
    fi
fi

log_success_msg "${PKGNAME}: sucessfully set up overlay for root filesystem"

exit 0