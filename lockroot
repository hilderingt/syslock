PREREQ=""

prereqs()
{
    echo "${PREREQ}"
}

case "$1" in
    prereqs)
    prereqs
    exit 0
    ;;
esac

. /scripts/functions

PKGNAME="lockroot"
NOLOCK_FILE="/nolock"

NOLOCK=
for PARAM in $(cat /proc/cmdline); do
    case ${PARAM} in
        nolock)
            NOLOCK=true
            ;;
    esac
done

if [ "x${NOLOCK}" = "xtrue" ]; then
    log_warning_msg "${PKGNAME}: disabled, found kernel boot parameter 'nolock'"
    exit 0
fi

if [ -e "${rootmnt}${NOLOCK_FILE}" ]; then
    log_warning_msg "${PKGNAME}: disabled, found file '${rootmnt}${NOLOCK_FILE}'"
    exit 0
fi

ROOT_OVERLAY_BASE=/.lock
ROOT_OVERLAY_UPPER=/${ROOT_OVERLAY_BASE}/rw
ROOT_OVERLAY_LOWER=/${ROOT_OVERLAY_BASE}/ro
ROOT_OVERLAY_WORK=/${ROOT_OVERLAY_BASE}/.work

mount -t tmpfs tmpfs-root ${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 1: failed to create tmpfs for root filesystem"
    exit 0
fi

#modprobe -qb ${ROOT_RO_DRIVER}
#if [ $? -ne 0 ]; then
#    log_failure_msg "${PKGNAME} ERROR 2: missing kernel module ${ROOT_RO_DRIVER}"
#    exit 0
#fi

[ -d ${ROOT_OVERLAY_UPPER} ] || mkdir -p ${ROOT_OVERLAY_UPPER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 1.1: failed to create ${ROOT_OVERLAY_UPPER}"
    exit 0
fi

[ -d ${ROOT_OVERLAY_LOWER} ] || mkdir -p ${ROOT_OVERLAY_LOWER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 1.2: failed to create ${ROOT_OVERLAY_LOWER}"
    exit 0
fi

[ -d ${ROOT_OVERLAY_WORK} ] || mkdir -p ${ROOT_OVERLAY_WORK}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 1.3: failed to create ${ROOT_OVERLAY_WORK}"
    exit 0
fi

mount -o move ${rootmnt} ${ROOT_OVERLAY_LOWER}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 2: failed to move root filesystem from ${rootmnt} to ${ROOT_OVERLAY_LOWER}"
    exit 0
fi

mount -t overlay -o lowerdir=${ROOT_OVERLAY_LOWER},upperdir=${ROOT_OVERLAY_UPPER},workdir=${ROOT_OVERLAY_WORK} overlay ${rootmnt}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 3: failed to create overlay for root filesystem"

    mount -o move ${ROOT_OVERLAY_LOWER} ${rootmnt}
    if [ $? -ne 0 ]; then

       panic "${PKGNAME}: RECOVERY ERROR: failed to move root filesystem back to ${rootmnt}"
    fi
    exit 0
fi

[ -d ${rootmnt}${ROOT_OVERLAY_BASE} ] || mkdir -p ${rootmnt}${ROOT_OVERLAY_BASE}
mount -o move ${ROOT_OVERLAY_BASE} ${rootmnt}${ROOT_OVERLAY_BASE}
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 4: failed to move ${ROOT_OVERLAY_BASE} to ${rootmnt}${ROOT_OVERLAY_BASE}"
    exit 0
fi

ROOT_FSTYPE_MNTOPTS=$(cat /proc/mounts | ${rootmnt}/bin/grep ${ROOT} | ${rootmnt}/usr/bin/cut -d' ' -f3,4)
cat <<EOF >${rootmnt}/etc/fstab
#
#  fstab modified by lockroot at startup
#

${ROOT} ${REAL_ROOT_RO} ${ROOT_FSTYPE_MNTOPTS} 0 0
EOF
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 5: failed to modify original root filsystem fstab entry"
    #exit 0
fi

cat ${rootmnt}${REAL_ROOT_RO}/etc/fstab | ${rootmnt}/bin/grep -v ' / ' | ${rootmnt}/bin/grep -v swap >>${rootmnt}/etc/fstab
if [ $? -ne 0 ]; then
    log_failure_msg "${PKGNAME}: ERROR 6: failed to delete fstab entries for root filesystem and swap"
    #exit 0
fi

log_success_msg "${PKGNAME}: sucessfully set up overlay for root filesystem"

exit 0